/*
  With this selector, we are specifying that all objects use
  the border-box model (not the content-box model)
*/
*, *:after, *:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}


/*
  Here we are using a 'fancy' css selector that is 
  specifying if the class of an item starts with
  'col-', then we should apply the styling listed
*/



/*
  Much like last week, we are clearing the floating items so
  that our 'grid' structure can be stacked on others
*/

article {
  padding: 0em 2em; 
}

p.sideNote

figure {
  margin: 0;
}

/* the side titles */




p.sideNote {
  font-size: .9em;
}

h3.sideTitle {
  font-family: 'Arvo', cursive;
  color: #3333CC;
}


/*
  Here we are defining our 75% wide column (for a 10 col grid)
*/
.col-8of10 {
  width: 75%;
}

/*
  Here using @media queries, we are specifying when the display
  has a width less than 50em it should collapse the 5/10 columns 
  into one stack (hence width: 100%)
*/
@media (max-width: 50em) {

  .col-8of10 {
    width: 100%;
  }

}

/*
  Here we are defining our 80% wide column (for a 10 col grid)
*/
.col-3of10 {
  width: 25%;
}

/*
  Here using @media queries, we are specifying when the display
  has a width less than 50em it should collapse the 5/10 columns 
  into one stack (hence width: 100%)
*/
@media (max-width: 50em) {

  .col-3of10 {
    width: 100%;
  }

}


img.mainEvent {
  height: 200; 
  max-width: 90%;
  border: 1px solid #888888; 
}

@media (max-width: 50em) {

  img.mainEvent {
    width: 100%;
  }

}